// Mocks generated by Mockito 5.4.6 from annotations
// in alimenta_ai/test/helpers/mock_setup.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i9;

import 'package:alimenta_ai/config/theme_provider.dart' as _i11;
import 'package:alimenta_ai/models/alimenta_api_models.dart' as _i8;
import 'package:alimenta_ai/services/alimenta_api_service.dart' as _i2;
import 'package:alimenta_ai/services/auth_service.dart' as _i10;
import 'package:alimenta_ai/services/nutricao_service.dart' as _i7;
import 'package:flutter/foundation.dart' as _i4;
import 'package:flutter/material.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAlimentaAPIService_0 extends _i1.SmartFake
    implements _i2.AlimentaAPIService {
  _FakeAlimentaAPIService_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeThemeData_1 extends _i1.SmartFake implements _i3.ThemeData {
  _FakeThemeData_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );

  @override
  String toString({_i4.DiagnosticLevel? minLevel = _i4.DiagnosticLevel.info}) =>
      super.toString();
}

/// A class which mocks [AlimentaAPIService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAlimentaAPIService extends _i1.Mock
    implements _i2.AlimentaAPIService {
  MockAlimentaAPIService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  void setAuthToken(String? token) => super.noSuchMethod(
        Invocation.method(
          #setAuthToken,
          [token],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<Map<String, dynamic>> loginPaciente(
    String? email,
    String? senha,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginPaciente,
          [
            email,
            senha,
          ],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> loginNutri(
    String? email,
    String? senha,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginNutri,
          [
            email,
            senha,
          ],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> processarAudioRefeicao({
    required String? audioFilePath,
    required int? pacienteId,
    required int? nutriId,
    String? tipoRefeicao,
    String? observacoes,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #processarAudioRefeicao,
          [],
          {
            #audioFilePath: audioFilePath,
            #pacienteId: pacienteId,
            #nutriId: nutriId,
            #tipoRefeicao: tipoRefeicao,
            #observacoes: observacoes,
          },
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> buscarAlimentos(String? nome) =>
      (super.noSuchMethod(
        Invocation.method(
          #buscarAlimentos,
          [nome],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> calcularMacros({
    required String? nomeAlimento,
    required double? quantidade,
    required int? pacienteId,
    required int? nutriId,
    String? tipoRefeicao,
    String? observacoes,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #calcularMacros,
          [],
          {
            #nomeAlimento: nomeAlimento,
            #quantidade: quantidade,
            #pacienteId: pacienteId,
            #nutriId: nutriId,
            #tipoRefeicao: tipoRefeicao,
            #observacoes: observacoes,
          },
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> obterResumoDiario(
    int? pacienteId, [
    String? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #obterResumoDiario,
          [
            pacienteId,
            data,
          ],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> obterHistoricoRegistros(
    int? pacienteId, [
    int? dias = 7,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #obterHistoricoRegistros,
          [
            pacienteId,
            dias,
          ],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> zerarRegistroDia(
    int? pacienteId, [
    String? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #zerarRegistroDia,
          [
            pacienteId,
            data,
          ],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> subtrairMacros({
    required int? pacienteId,
    required double? proteina,
    required double? carboidrato,
    required double? gordura,
    required double? calorias,
    String? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #subtrairMacros,
          [],
          {
            #pacienteId: pacienteId,
            #proteina: proteina,
            #carboidrato: carboidrato,
            #gordura: gordura,
            #calorias: calorias,
            #data: data,
          },
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> obterMeta(
    int? pacienteId,
    int? nutriId, [
    String? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #obterMeta,
          [
            pacienteId,
            nutriId,
            data,
          ],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> obterHistoricoMetas(int? pacienteId) =>
      (super.noSuchMethod(
        Invocation.method(
          #obterHistoricoMetas,
          [pacienteId],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> obterEstatisticasMensais(
    int? pacienteId,
    int? ano,
    int? mes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #obterEstatisticasMensais,
          [
            pacienteId,
            ano,
            mes,
          ],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<bool> verificarConexao() => (super.noSuchMethod(
        Invocation.method(
          #verificarConexao,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<Map<String, dynamic>> buscarMetasPublicas({
    required int? pacienteId,
    required int? nutriId,
    String? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #buscarMetasPublicas,
          [],
          {
            #pacienteId: pacienteId,
            #nutriId: nutriId,
            #data: data,
          },
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);
}

/// A class which mocks [NutricaoService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNutricaoService extends _i1.Mock implements _i7.NutricaoService {
  MockNutricaoService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isLoading => (super.noSuchMethod(
        Invocation.getter(#isLoading),
        returnValue: false,
      ) as bool);

  @override
  _i2.AlimentaAPIService get apiService => (super.noSuchMethod(
        Invocation.getter(#apiService),
        returnValue: _FakeAlimentaAPIService_0(
          this,
          Invocation.getter(#apiService),
        ),
      ) as _i2.AlimentaAPIService);

  @override
  int get totalDailyCalories => (super.noSuchMethod(
        Invocation.getter(#totalDailyCalories),
        returnValue: 0,
      ) as int);

  @override
  int get proteinTotal => (super.noSuchMethod(
        Invocation.getter(#proteinTotal),
        returnValue: 0,
      ) as int);

  @override
  int get fatTotal => (super.noSuchMethod(
        Invocation.getter(#fatTotal),
        returnValue: 0,
      ) as int);

  @override
  int get carbsTotal => (super.noSuchMethod(
        Invocation.getter(#carbsTotal),
        returnValue: 0,
      ) as int);

  @override
  int get caloriesGoal => (super.noSuchMethod(
        Invocation.getter(#caloriesGoal),
        returnValue: 0,
      ) as int);

  @override
  int get proteinGoal => (super.noSuchMethod(
        Invocation.getter(#proteinGoal),
        returnValue: 0,
      ) as int);

  @override
  int get fatGoal => (super.noSuchMethod(
        Invocation.getter(#fatGoal),
        returnValue: 0,
      ) as int);

  @override
  int get carbsGoal => (super.noSuchMethod(
        Invocation.getter(#carbsGoal),
        returnValue: 0,
      ) as int);

  @override
  double get caloriesProgress => (super.noSuchMethod(
        Invocation.getter(#caloriesProgress),
        returnValue: 0.0,
      ) as double);

  @override
  double get proteinProgress => (super.noSuchMethod(
        Invocation.getter(#proteinProgress),
        returnValue: 0.0,
      ) as double);

  @override
  double get fatProgress => (super.noSuchMethod(
        Invocation.getter(#fatProgress),
        returnValue: 0.0,
      ) as double);

  @override
  double get carbsProgress => (super.noSuchMethod(
        Invocation.getter(#carbsProgress),
        returnValue: 0.0,
      ) as double);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void configurarUsuarios(
    int? pacienteId,
    int? nutriId,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #configurarUsuarios,
          [
            pacienteId,
            nutriId,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void limparEstado() => super.noSuchMethod(
        Invocation.method(
          #limparEstado,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<_i8.ResultadoProcessamentoAudio?> processarAudioRefeicao({
    required String? audioFilePath,
    String? tipoRefeicao,
    String? observacoes,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #processarAudioRefeicao,
          [],
          {
            #audioFilePath: audioFilePath,
            #tipoRefeicao: tipoRefeicao,
            #observacoes: observacoes,
          },
        ),
        returnValue: _i6.Future<_i8.ResultadoProcessamentoAudio?>.value(),
      ) as _i6.Future<_i8.ResultadoProcessamentoAudio?>);

  @override
  _i6.Future<bool> registrarAlimentoManual({
    required String? nomeAlimento,
    required double? quantidade,
    String? tipoRefeicao,
    String? observacoes,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #registrarAlimentoManual,
          [],
          {
            #nomeAlimento: nomeAlimento,
            #quantidade: quantidade,
            #tipoRefeicao: tipoRefeicao,
            #observacoes: observacoes,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<List<_i8.AlimentoEncontrado>> buscarAlimentos(String? nome) =>
      (super.noSuchMethod(
        Invocation.method(
          #buscarAlimentos,
          [nome],
        ),
        returnValue: _i6.Future<List<_i8.AlimentoEncontrado>>.value(
            <_i8.AlimentoEncontrado>[]),
      ) as _i6.Future<List<_i8.AlimentoEncontrado>>);

  @override
  _i6.Future<void> atualizarResumoDiario([String? data]) => (super.noSuchMethod(
        Invocation.method(
          #atualizarResumoDiario,
          [data],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<_i8.RegistroHistorico>> obterHistorico([int? dias = 7]) =>
      (super.noSuchMethod(
        Invocation.method(
          #obterHistorico,
          [dias],
        ),
        returnValue: _i6.Future<List<_i8.RegistroHistorico>>.value(
            <_i8.RegistroHistorico>[]),
      ) as _i6.Future<List<_i8.RegistroHistorico>>);

  @override
  _i6.Future<bool> zerarRegistroDia([String? data]) => (super.noSuchMethod(
        Invocation.method(
          #zerarRegistroDia,
          [data],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<bool> removerAlimento({
    required double? proteina,
    required double? carboidrato,
    required double? gordura,
    required double? calorias,
    String? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #removerAlimento,
          [],
          {
            #proteina: proteina,
            #carboidrato: carboidrato,
            #gordura: gordura,
            #calorias: calorias,
            #data: data,
          },
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<_i8.MetaDiaria?> obterMeta([String? data]) => (super.noSuchMethod(
        Invocation.method(
          #obterMeta,
          [data],
        ),
        returnValue: _i6.Future<_i8.MetaDiaria?>.value(),
      ) as _i6.Future<_i8.MetaDiaria?>);

  @override
  _i6.Future<_i8.MetaDiaria?> buscarMetasPublicas({
    int? pacienteIdOverride,
    int? nutriIdOverride,
    String? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #buscarMetasPublicas,
          [],
          {
            #pacienteIdOverride: pacienteIdOverride,
            #nutriIdOverride: nutriIdOverride,
            #data: data,
          },
        ),
        returnValue: _i6.Future<_i8.MetaDiaria?>.value(),
      ) as _i6.Future<_i8.MetaDiaria?>);

  @override
  _i6.Future<bool> verificarConexao() => (super.noSuchMethod(
        Invocation.method(
          #verificarConexao,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i10.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get baseUrl => (super.noSuchMethod(
        Invocation.getter(#baseUrl),
        returnValue: _i5.dummyValue<String>(
          this,
          Invocation.getter(#baseUrl),
        ),
      ) as String);

  @override
  _i6.Future<Map<String, dynamic>> login(
    String? email,
    String? password, {
    String? tipo = 'paciente',
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
          {#tipo: tipo},
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> loginPaciente(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginPaciente,
          [
            email,
            password,
          ],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);

  @override
  _i6.Future<Map<String, dynamic>> loginNutri(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginNutri,
          [
            email,
            password,
          ],
        ),
        returnValue:
            _i6.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);
}

/// A class which mocks [ThemeProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockThemeProvider extends _i1.Mock implements _i11.ThemeProvider {
  MockThemeProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isDarkMode => (super.noSuchMethod(
        Invocation.getter(#isDarkMode),
        returnValue: false,
      ) as bool);

  @override
  _i3.ThemeMode get themeMode => (super.noSuchMethod(
        Invocation.getter(#themeMode),
        returnValue: _i3.ThemeMode.system,
      ) as _i3.ThemeMode);

  @override
  _i3.ThemeData get lightTheme => (super.noSuchMethod(
        Invocation.getter(#lightTheme),
        returnValue: _FakeThemeData_1(
          this,
          Invocation.getter(#lightTheme),
        ),
      ) as _i3.ThemeData);

  @override
  _i3.ThemeData get darkTheme => (super.noSuchMethod(
        Invocation.getter(#darkTheme),
        returnValue: _FakeThemeData_1(
          this,
          Invocation.getter(#darkTheme),
        ),
      ) as _i3.ThemeData);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void toggleTheme() => super.noSuchMethod(
        Invocation.method(
          #toggleTheme,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setThemeMode(_i3.ThemeMode? mode) => super.noSuchMethod(
        Invocation.method(
          #setThemeMode,
          [mode],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setDarkMode(bool? isDark) => super.noSuchMethod(
        Invocation.method(
          #setDarkMode,
          [isDark],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i9.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
